load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")

go_image(
    name = "kubectl",
    binary = "@io_k8s_kubernetes//cmd/kubectl",
    pure = "on",
)

container_image(
    name = "kubectl_in_path",
    base = ":kubectl",
    env = {
        # Don't include FHS paths since they aren't available anyways
        "PATH": "/app/cmd/kubectl",
    },
)

go_image(
    name = "k8s_cts_image",
    base = ":kubectl_in_path",
    binary = "@io_k8s_kubernetes//test/e2e:_go_default_test-pure",
    pure = "on",
    visibility = ["//metropolis/node:__pkg__"],
)

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "source.monogon.dev/metropolis/test/e2e/k8s_cts",
    visibility = ["//visibility:private"],
    deps = [
        "//metropolis/node:go_default_library",
        "//metropolis/test/e2e:go_default_library",
        "//metropolis/test/launch:go_default_library",
        "@io_k8s_api//core/v1:go_default_library",
        "@io_k8s_api//rbac/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
    ],
)

go_binary(
    name = "k8s_cts",
    data = [
        "//metropolis/node:image",
        "//metropolis/node:swtpm_data",
        "//metropolis/test/ktest:linux-testing",
        "//metropolis/test/nanoswitch:initramfs",
        "//third_party/edk2:firmware",
        "@com_github_bonzini_qboot//:qboot-bin",
    ],
    embed = [":go_default_library"],
    visibility = ["//visibility:private"],
)
