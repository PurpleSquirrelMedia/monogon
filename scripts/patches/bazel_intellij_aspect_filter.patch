Copyright 2020 The Monogon Project Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


# We need to patch the IntelliJ Bazel aspect that is injected via the @intellij_bazel repository
# to properly resolve go_library rules that have both source files and embeds.
--- a/intellij_info_impl.bzl.o
+++ b/intellij_info_impl.bzl
 def collect_go_info(target, ctx, semantics, ide_info, ide_info_file, output_groups):
     """Updates Go-specific output groups, returns false if not a recognized Go target."""
@@ -349,6 +349,8 @@ def collect_go_info(target, ctx, semantics, ide_info, ide_info_file, output_grou
         "go_appengine_test",
     ]:
         sources = [f for src in getattr(ctx.rule.attr, "srcs", []) for f in src.files.to_list()]
+        sources += [f for embed in getattr(ctx.rule.attr, "embed", []) for f in _collect_generated_go_sources(embed) or []]
+
         generated = [f for f in sources if not f.is_source]
     elif ctx.rule.kind == "go_wrap_cc":
         genfiles = target.files.to_list()
